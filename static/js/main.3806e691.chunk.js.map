{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/helpers.ts","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialState","ALL","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","className","map","id","title","completed","isTodoSelected","classnames","onClick","todoAction","TodoFilter","name","onChange","e","value","FilterActions","COMPLETED","ACTIVE","handleSelectChange","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","selectedTodo","useEffect","userId","selectedUser","href","email","App","data","todosActions","visibleTodos","filteredTodos","lowerCasedQuery","toLowerCase","includes","filterTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3806e691.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return {\n        ...action.payload,\n      };\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetAllAction = {\n  type: 'todos/ALL',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype SetActiveAction = {\n  type: 'todos/ACTIVE',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype SetCompletedAction = {\n  type: 'todos/COMPLETED',\n  payload: {\n    status: Status,\n    query: string,\n  }\n};\n\ntype Action =\n  | SetAllAction\n  | SetActiveAction\n  | SetCompletedAction;\n\nconst filterAll = (\n  status: Status,\n  query: string,\n): SetAllAction => ({\n  type: 'todos/ALL',\n  payload: {\n    status,\n    query,\n  },\n});\n\nconst filterActive = (\n  status: Status,\n  query: string,\n): SetActiveAction => ({\n  type: 'todos/ACTIVE',\n  payload: {\n    status,\n    query,\n  },\n});\n\nconst filterCompleted = (\n  status: Status,\n  query: string,\n): SetCompletedAction => ({\n  type: 'todos/COMPLETED',\n  payload: {\n    status,\n    query,\n  },\n});\n\nexport const actions = {\n  filterAll,\n  filterActive,\n  filterCompleted,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'todos/ALL':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    case 'todos/ACTIVE':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    case 'todos/COMPLETED':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosFromServer = {\n  type: 'todos/add',\n  payload: Todo[],\n};\n\nconst addTodos = (todos: Todo[]): AddTodosFromServer => ({\n  type: 'todos/add',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\ntype State = Todo [] | [];\n\nconst todosReducer = (\n  state: State = [],\n  action: AddTodosFromServer,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/add':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classnames from 'classnames';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as todoAction } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo: Todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          const isTodoSelected = currentTodo?.id === id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classnames({\n                'has-background-info-light': isTodoSelected,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classnames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => dispatch(todoAction.setTodo(todo))}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classnames(\n                        'far',\n                        {\n                          'fa-eye-slash': isTodoSelected,\n                          'fa-eye': !isTodoSelected,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as FilterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = (\n) => {\n  const dispatch = useDispatch();\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n\n  const handleSelectChange = (value: Status) => {\n    switch (value) {\n      case Status.ALL:\n        dispatch(FilterActions.filterAll(value, query));\n        break;\n      case Status.COMPLETED:\n        dispatch(FilterActions.filterCompleted(value, query));\n        break;\n      case Status.ACTIVE:\n        dispatch(FilterActions.filterActive(value, query));\n        break;\n      default:\n        dispatch(FilterActions.filterAll(value, query));\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"filter\"\n            onChange={(e) => handleSelectChange(e.target.value as Status)}\n            value={status}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          name=\"query\"\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => dispatch(\n            FilterActions.filterAll(status, e.target.value),\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(FilterActions.filterAll(Status.ALL, ''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as todoAction } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User>();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(selectedUser => setUser(selectedUser));\n    }\n  }, []);\n\n  const {\n    id,\n    title,\n    completed,\n  } = selectedTodo!;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(todoAction.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              {user ? (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              ) : (\n                <p>User was not fetched</p>\n              )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { filterTodos } from './utils/helpers';\n\nexport const App: React.FC = () => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getTodos()\n      .then(\n        (data) => dispatch(todosActions.addTodos(data)),\n      );\n  }, []);\n\n  const visibleTodos = filterTodos(todos, query, status);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal />\n      ) }\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos = (todos: Todo[], query: string, status: string) => {\n  let filteredTodos = [...todos];\n  const lowerCasedQuery = query.toLowerCase();\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(\n      (todo) => todo.title.toLowerCase().includes(lowerCasedQuery),\n    );\n  }\n\n  switch (status) {\n    case Status.ALL:\n      return filteredTodos;\n    case Status.ACTIVE:\n      return filteredTodos.filter((todo) => !todo.completed);\n    case Status.COMPLETED:\n      return filteredTodos.filter((todo) => todo.completed);\n    default:\n      return filteredTodos;\n  }\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}